version: '3.8'

services:
<<<<<<< HEAD
  postgres:
    image: postgres:15-alpine
    container_name: paramarsh-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: paramarsh
      POSTGRES_PASSWORD: paramarsh123
      POSTGRES_DB: paramarsh_sms
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U paramarsh -d paramarsh_sms"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: paramarsh-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@paramarsh.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
=======
  # NestJS API Service  
  api:
    image: node:20-slim
    container_name: paramarsh-api
    working_dir: /app
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=file:/app/data/dev.db
      - PORT=8080
    volumes:
      - ./apps/api:/app
      - sqlite_data:/app/data
    command: >
      bash -c "
        echo 'Installing system dependencies...' &&
        apt-get update && apt-get install -y curl openssl ca-certificates &&
        echo 'Installing npm dependencies...' &&
        npm install --include=dev &&
        echo 'Generating Prisma client...' &&
        npx prisma generate &&
        echo 'Setting up database...' &&
        mkdir -p /app/data &&
        npx prisma db push --accept-data-loss &&
        echo 'Seeding database...' &&
        npm run prisma:seed &&
        echo 'Starting development server...' &&
        npm run start:dev
      "
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 180s

  # Next.js Web Application
  web:
    image: node:20-slim
    container_name: paramarsh-web
    working_dir: /app
    ports:
      - "8081:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    volumes:
      - ./apps/web:/app
    command: >
      bash -c "
        echo 'Installing system dependencies...' &&
        apt-get update && apt-get install -y curl &&
        echo 'Installing dependencies with npm...' &&
        npm install --legacy-peer-deps &&
        echo 'Building application...' &&
        npm run build &&
        echo 'Starting web server...' &&
        npm run start
      "
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

volumes:
  sqlite_data:
    driver: local

networks:
  default:
    name: paramarsh-network
>>>>>>> origin/main
