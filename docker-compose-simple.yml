version: '3.8'

services:
  # NestJS API Service
  api:
    image: node:18-alpine
    container_name: paramarsh-api
    working_dir: /app
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=file:/app/data/dev.db
      - PORT=8080
    volumes:
      # Mount the API source code
      - ./apps/api:/app
      # Mount SQLite database to persist data
      - sqlite_data:/app/data
    command: >
      sh -c "
        apk add --no-cache curl &&
        npm install &&
        npx prisma generate &&
        mkdir -p /app/data &&
        if [ ! -s '/app/data/dev.db' ]; then
          echo 'Setting up database...' &&
          npx prisma migrate dev --name init &&
          npm run prisma:seed
        fi &&
        npm run start:dev
      "
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Next.js Web Application
  web:
    image: node:18-alpine
    container_name: paramarsh-web
    working_dir: /app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    volumes:
      # Mount the web source code
      - ./apps/web:/app
    command: >
      sh -c "
        apk add --no-cache curl &&
        npm install &&
        npm run dev
      "
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  # Named volume for SQLite database persistence
  sqlite_data:
    driver: local

networks:
  default:
    name: paramarsh-simple-network